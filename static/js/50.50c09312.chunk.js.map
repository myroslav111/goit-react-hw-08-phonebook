{"version":3,"file":"static/js/50.50c09312.chunk.js","mappings":"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","sources":["components/PhoneBookContacts/SearchForm/SearchForm.styled.tsx","components/PhoneBookContacts/SearchForm/SearchForm.tsx","components/PhoneBookContacts/PhoneBookContacts.styled.tsx","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/PhoneBookContacts/ContactItem/ContactItem.styled.tsx","components/PhoneBookContacts/ContactItem/ContactItem.tsx","components/PhoneBookContacts/PhoneBookContacts.tsx","page/PhoneBook/PhoneBook.styled.tsx","page/PhoneBook/PhoneBook.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FormFind = styled.form`\n  position: relative;\n  width: 100%;\n  max-width: 17em;\n`;\n\nexport const Label = styled.label`\n  color: #e3e4e8;\n  /* color: black; */\n  overflow: hidden;\n  position: absolute;\n  width: 0;\n  height: 0;\n`;\n\nexport const Input = styled.input`\n  color: var(--search-input);\n  font: 1em/1.5 Hind, sans-serif;\n  margin: auto;\n  display: block;\n  transition: all calc(var(--dur) * 0.5) linear;\n  background: transparent;\n  border-radius: 50%;\n  box-shadow: 0 0 0 0.25em inset;\n  caret-color: var(--primary);\n  width: 2em;\n  height: 2em;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  font-family: cursive;\n  cursor: pointer;\n  &:focus,\n  &:valid {\n    background: white;\n    border-radius: 0.25em;\n    box-shadow: none;\n    padding: 0.25em 1em;\n    transition-duration: calc(var(--dur) * 0.25);\n    transition-delay: calc(var(--dur) * 0.25);\n    height: 2em;\n    width: 100%;\n  }\n  &:focus {\n    animation: showCaret var(--dur) steps(1);\n    outline: transparent;\n    box-shadow: var(--hover);\n  }\n  &:focus + Span,\n  &:valid + Span {\n    animation: handleToCaret var(--dur) linear;\n    background: transparent;\n    width: 1px;\n    height: 1.5em;\n    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, -0.25em);\n  }\n  &:hover {\n  }\n`;\n\nexport const Span = styled.span`\n  color: var(--text);\n  /* color: black; */\n  margin: auto;\n  display: block;\n  transition: all calc(var(--dur) * 0.5) linear;\n  background: var(--search-input);\n  border-radius: 0 0 0.125em 0.125em;\n  margin-bottom: -0.6em;\n  width: 0.25em;\n  height: 1em;\n  transform: translate(0, -1em) rotate(-45deg) translate(0, 0.875em);\n  transform-origin: 50% 0;\n`;\n","import { FormFind, Label, Input, Span } from \"./SearchForm.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filtered } from \"../../../redux/reducers\";\nimport { getDataFilter } from \"../../../redux/reducers\";\nimport { AppDispatch } from \"../../../redux/store\";\n\nfunction SearchForm() {\n  const value = useSelector(getDataFilter);\n  const dispatch = useDispatch<AppDispatch>();\n  // записываем велью инпута\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    dispatch(filtered(e.currentTarget.value));\n  };\n  return (\n    <FormFind>\n      <Label htmlFor=\"search\">Finde contact by name</Label>\n      <Input\n        id=\"search\"\n        onChange={changeFilter}\n        value={value}\n        type=\"search\"\n        pattern=\".*\\S.*\"\n        required\n      />\n      <Span className=\"caret\"></Span>\n    </FormFind>\n  );\n}\n\nexport default SearchForm;\n","import styled from \"@emotion/styled\";\n\nexport const ListWraper = styled.ul`\n  padding-left: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  /* width: 390px; */\n  @media screen and (max-width: 500px) {\n    & {\n      /* width: 330px; */\n    }\n  }\n`;\n\nexport const BoxList = styled.div`\n  margin: 25px 0;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%);\n  padding: 10px 20px 10px 20px;\n  border: 1px solid grey;\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: \"The Nautigal\", cursive;\n  background-color: rgb(250, 250, 250);\n  background-color: var(--boook-box);\n  /* background-color: rgba(123, 128, 135, 0.5); */\n  /* &:hover {\n    transform: scale(1.1);\n    z-index: 1;\n  } */\n  @media screen and (max-width: 500px) {\n    & {\n      width: 300px;\n    }\n  }\n`;\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 5px 10px 5px;\n  width: 100%;\n  justify-content: space-between;\n  margin: 6px 0 6px 0;\n  cursor: pointer;\n  border-radius: 8px;\n  background-color: white;\n  background-color: var(--form);\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    box-shadow: var(--box-shadow);\n    border-radius: 8px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: inherit;\n  font-size: 25px;\n  color: black;\n  padding: 0;\n  width: 70px;\n  height: 30px;\n  border: 2px solid #888888;\n  outline: none;\n  background-color: #f4f5f6;\n  border-radius: 8px;\n  /* box-shadow: -6px -20px 35px #ffffff, -6px -10px 15px #ffffff,\n    -20px 0px 52px #ffffff, 2px 3px 6px rgb(0 0 0 / 89%); */\n  transition: 0.13s ease-in-out;\n  cursor: pointer;\n  &:active {\n    box-shadow: none;\n  }\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 400%;\n  z-index: 1;\n  &:hover {\n    animation: animate 8s linear infinite;\n  }\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    z-index: -1;\n    background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n    background-size: 400%;\n    border-radius: 8px;\n    opacity: 0;\n    transition: 0.5s;\n  }\n  &:hover:before {\n    filter: blur(20px);\n    opacity: 1;\n    animation: animate 8s linear infinite;\n  }\n`;\n\nexport const Name = styled.span`\n  color: var(--text);\n  font-size: 30px;\n  margin-right: 10px;\n  @media screen and (max-width: 500px) {\n    & {\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const Number = styled.span`\n  color: var(--text);\n  font-size: 30px;\n  @media screen and (max-width: 500px) {\n    & {\n      font-size: 20px;\n    }\n  }\n`;\n","import { Item, Name, Number, ButtonDelete } from \"./ContactItem.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../../redux/actions\";\nimport type { AppDispatch } from \"../../../redux/store\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction ContactItem(props: any) {\n  const { contact } = props;\n  const dispatch = useDispatch<AppDispatch>();\n  const { t } = useTranslation();\n  return (\n    <Item key={contact.id}>\n      <div>\n        <Name> {contact.name}:</Name>\n        <Number>{contact.number}</Number>\n      </div>\n\n      <ButtonDelete\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        {t(\"delete\")}\n      </ButtonDelete>\n    </Item>\n  );\n}\n\nexport default ContactItem;\n","import { ListWraper, BoxList } from \"./PhoneBookContacts.styled\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport \"./animations/animation.css\";\nimport { getDataItem, getDataFilter } from \"../../redux/reducers\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { getContacts } from \"../../redux/actions\";\n\nfunction PhoneBookContacts() {\n  const arrContacts = useSelector(getDataItem);\n  const filteredString = useSelector(getDataFilter);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  // отфильтрованый масив контактов отвечающий поиску\n  const getVisibleContact = (allContact: Object[], filter: string) => {\n    const normalizeFilter = filter.toLowerCase();\n    return allContact.filter((contact: any) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filtered = getVisibleContact(arrContacts, filteredString);\n\n  return (\n    <BoxList>\n      <TransitionGroup component={ListWraper}>\n        {filtered.map((contact: any) => (\n          <CSSTransition key={contact.id} timeout={250} classNames=\"fade\">\n            <ContactItem contact={contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </BoxList>\n  );\n}\n\nexport default PhoneBookContacts;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n","import SearchForm from \"../../components/PhoneBookContacts/SearchForm\";\nimport PhoneBookContacts from \"../../components/PhoneBookContacts\";\nimport { Container } from \"./PhoneBook.styled\";\n\nconst PhoneBook = () => {\n  return (\n    <Container>\n      <SearchForm />\n      <PhoneBookContacts />\n    </Container>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["FormFind","styled","Label","Input","Span","value","useSelector","getDataFilter","dispatch","useDispatch","htmlFor","id","onChange","e","filtered","currentTarget","type","pattern","required","className","ListWraper","BoxList","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","forceReflow","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","Transition","_extends","defaultProps","propTypes","Item","ButtonDelete","Name","Number","contact","t","useTranslation","name","number","onClick","deleteContact","arrContacts","getDataItem","filteredString","useEffect","getContacts","allContact","filter","normalizeFilter","toLowerCase","includes","getVisibleContact","TransitionGroup","component","map","timeout","Container"],"sourceRoot":""}