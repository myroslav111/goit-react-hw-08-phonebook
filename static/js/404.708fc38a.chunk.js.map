{"version":3,"file":"static/js/404.708fc38a.chunk.js","mappings":"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","sources":["components/PhoneBookContacts/SearchForm/SearchForm.styled.tsx","components/PhoneBookContacts/SearchForm/SearchForm.tsx","components/PhoneBookContacts/PhoneBookContacts.styled.tsx","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/PhoneBookContacts/ContactItem/ContactItem.styled.tsx","components/PhoneBookContacts/ContactItem/ContactItem.tsx","components/PhoneBookContacts/PhoneBookContacts.tsx","page/PhoneBook/PhoneBook.styled.tsx","page/PhoneBook/PhoneBook.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FormFind = styled.form`\n  position: relative;\n  width: 100%;\n  max-width: 17em;\n`;\n\nexport const Label = styled.label`\n  color: #e3e4e8;\n  /* color: black; */\n  overflow: hidden;\n  position: absolute;\n  width: 0;\n  height: 0;\n`;\n\nexport const Input = styled.input`\n  color: var(--search-input);\n  font: 1em/1.5 Hind, sans-serif;\n  margin: auto;\n  display: block;\n  transition: all calc(var(--dur) * 0.5) linear;\n  background: transparent;\n  border-radius: 50%;\n  box-shadow: 0 0 0 0.25em inset;\n  caret-color: var(--primary);\n  width: 2em;\n  height: 2em;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  font-family: cursive;\n  cursor: pointer;\n  &:focus,\n  &:valid {\n    background: white;\n    border-radius: 0.25em;\n    box-shadow: none;\n    padding: 0.25em 1em;\n    transition-duration: calc(var(--dur) * 0.25);\n    transition-delay: calc(var(--dur) * 0.25);\n    height: 2em;\n    width: 100%;\n  }\n  &:focus {\n    animation: showCaret var(--dur) steps(1);\n    outline: transparent;\n    box-shadow: var(--hover);\n  }\n  &:focus + Span,\n  &:valid + Span {\n    animation: handleToCaret var(--dur) linear;\n    background: transparent;\n    width: 1px;\n    height: 1.5em;\n    transform: translate(0, -1em) rotate(-180deg) translate(7.5em, -0.25em);\n  }\n  &:hover {\n  }\n`;\n\nexport const Span = styled.span`\n  color: var(--text);\n  /* color: black; */\n  margin: auto;\n  display: block;\n  transition: all calc(var(--dur) * 0.5) linear;\n  background: var(--search-input);\n  border-radius: 0 0 0.125em 0.125em;\n  margin-bottom: -0.6em;\n  width: 0.25em;\n  height: 1em;\n  transform: translate(0, -1em) rotate(-45deg) translate(0, 0.875em);\n  transform-origin: 50% 0;\n`;\n","import { FormFind, Label, Input, Span } from \"./SearchForm.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filtered } from \"../../../redux/reducers\";\nimport { getDataFilter } from \"../../../redux/reducers\";\nimport { AppDispatch } from \"../../../redux/store\";\n\nfunction SearchForm() {\n  const value = useSelector(getDataFilter);\n  const dispatch = useDispatch<AppDispatch>();\n  // записываем велью инпута\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    dispatch(filtered(e.currentTarget.value));\n  };\n  return (\n    <FormFind>\n      <Label htmlFor=\"search\">Finde contact by name</Label>\n      <Input\n        id=\"search\"\n        onChange={changeFilter}\n        value={value}\n        type=\"search\"\n        pattern=\".*\\S.*\"\n        required\n      />\n      <Span className=\"caret\"></Span>\n    </FormFind>\n  );\n}\n\nexport default SearchForm;\n","import styled from \"@emotion/styled\";\n\nexport const ListWraper = styled.ul`\n  padding-left: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  /* width: 390px; */\n  @media screen and (max-width: 500px) {\n    & {\n      /* width: 330px; */\n    }\n  }\n`;\n\nexport const BoxList = styled.div`\n  margin: 25px 0;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%);\n  padding: 10px 20px 10px 20px;\n  border: 1px solid grey;\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: \"The Nautigal\", cursive;\n  background-color: rgb(250, 250, 250);\n  background-color: var(--boook-box);\n  /* background-color: rgba(123, 128, 135, 0.5); */\n  /* &:hover {\n    transform: scale(1.1);\n    z-index: 1;\n  } */\n  @media screen and (max-width: 500px) {\n    & {\n      width: 300px;\n    }\n  }\n`;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import React from 'react';\nexport default React.createContext(null);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 5px 10px 5px;\n  width: 100%;\n  justify-content: space-between;\n  margin: 6px 0 6px 0;\n  cursor: pointer;\n  border-radius: 8px;\n  background-color: white;\n  background-color: var(--form);\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    box-shadow: var(--box-shadow);\n    border-radius: 8px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: inherit;\n  font-size: 25px;\n  color: black;\n  padding: 0;\n  width: 70px;\n  height: 30px;\n  border: 2px solid #888888;\n  outline: none;\n  background-color: #f4f5f6;\n  border-radius: 8px;\n  /* box-shadow: -6px -20px 35px #ffffff, -6px -10px 15px #ffffff,\n    -20px 0px 52px #ffffff, 2px 3px 6px rgb(0 0 0 / 89%); */\n  transition: 0.13s ease-in-out;\n  cursor: pointer;\n  &:active {\n    box-shadow: none;\n  }\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 400%;\n  z-index: 1;\n  &:hover {\n    animation: animate 8s linear infinite;\n  }\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    z-index: -1;\n    background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n    background-size: 400%;\n    border-radius: 8px;\n    opacity: 0;\n    transition: 0.5s;\n  }\n  &:hover:before {\n    filter: blur(20px);\n    opacity: 1;\n    animation: animate 8s linear infinite;\n  }\n`;\n\nexport const Name = styled.span`\n  color: var(--text);\n  font-size: 30px;\n  margin-right: 10px;\n  @media screen and (max-width: 500px) {\n    & {\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const Number = styled.span`\n  color: var(--text);\n  font-size: 30px;\n  @media screen and (max-width: 500px) {\n    & {\n      font-size: 20px;\n    }\n  }\n`;\n","import { Item, Name, Number, ButtonDelete } from \"./ContactItem.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../../redux/actions\";\nimport type { AppDispatch } from \"../../../redux/store\";\n\nfunction ContactItem(props: any) {\n  const { contact } = props;\n  const dispatch = useDispatch<AppDispatch>();\n  return (\n    <Item key={contact.id}>\n      <div>\n        <Name> {contact.name}:</Name>\n        <Number>{contact.number}</Number>\n      </div>\n\n      <ButtonDelete\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        delete\n      </ButtonDelete>\n    </Item>\n  );\n}\n\nexport default ContactItem;\n","import { ListWraper, BoxList } from \"./PhoneBookContacts.styled\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport \"./animations/animation.css\";\nimport { getDataItem, getDataFilter } from \"../../redux/reducers\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { getContacts } from \"../../redux/actions\";\n// import { getIsLogIn } from \"../../redux/auth/auth-slice\";\n// import operations from \"../../redux/auth/auth-operations\";\n\nfunction PhoneBookContacts() {\n  const arrContacts = useSelector(getDataItem);\n  const filteredString = useSelector(getDataFilter);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  // отфильтрованый масив контактов отвечающий поиску\n  const getVisibleContact = (allContact: Object[], filter: string) => {\n    const normalizeFilter = filter.toLowerCase();\n    return allContact.filter((contact: any) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filtered = getVisibleContact(arrContacts, filteredString);\n\n  return (\n    <BoxList>\n      <TransitionGroup component={ListWraper}>\n        {filtered.map((contact: any) => (\n          <CSSTransition key={contact.id} timeout={250} classNames=\"fade\">\n            <ContactItem contact={contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </BoxList>\n  );\n}\n\nexport default PhoneBookContacts;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n","import SearchForm from \"../../components/PhoneBookContacts/SearchForm\";\nimport PhoneBookContacts from \"../../components/PhoneBookContacts\";\nimport { Container } from \"./PhoneBook.styled\";\n\nconst PhoneBook = () => {\n  return (\n    <Container>\n      <SearchForm />\n      <PhoneBookContacts />\n    </Container>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["FormFind","styled","Label","Input","Span","value","useSelector","getDataFilter","dispatch","useDispatch","htmlFor","id","onChange","e","filtered","currentTarget","type","pattern","required","className","ListWraper","BoxList","_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","React","getChildMapping","children","mapFn","result","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_proto","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","propTypes","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","forceReflow","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","childProps","noop","contextType","removeClass","classes","split","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","args","Array","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","Item","ButtonDelete","Name","Number","contact","name","number","onClick","deleteContact","arrContacts","getDataItem","filteredString","useEffect","getContacts","allContact","filter","normalizeFilter","toLowerCase","includes","getVisibleContact","Container"],"sourceRoot":""}