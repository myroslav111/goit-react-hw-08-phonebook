{"version":3,"file":"static/js/388.88b4db35.chunk.js","mappings":"oJAEaA,E,QAAWC,EAAAA,KAAH,knC,uJCkJrB,MA3IA,WACE,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACd,OAAQf,GACN,IAAK,OACHC,EAAQc,GACR,MAEF,IAAK,QACHZ,EAASY,GACT,MAEF,IAAK,WACHV,EAAYU,GACZ,MAEF,QACE,OAEL,EAoBKC,EAAQ,WACZf,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,+BACE,UAAC,IAAD,CAAUY,UAAU,OAAOC,aAAa,MAAMC,SA1B7B,SAACN,GACpBA,EAAEO,iBACF,IAAMC,EAAwB,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GACvCkB,EAAST,EAAES,OAKjBD,EAASrB,KAAOsB,EAAOtB,KAAKe,MAC5BM,EAASnB,MAAQoB,EAAOpB,MAAMa,MAC9BM,EAASjB,SAAWkB,EAAOlB,SAASW,MACpCQ,QAAQC,IAAIH,GACZX,EAASe,EAAAA,EAAAA,SAAoBJ,IAC7Bf,EAAS,iBACTU,GACD,EAWG,WACE,0BACE,wBAAKR,EAAE,gBAET,iBAAKS,UAAU,iCAAf,WACE,kBACEjB,KAAK,OACL0B,YAAalB,EAAE,QACfmB,KAAK,OACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRf,MAAOf,EACP+B,SAAUnB,KAEZ,gBAAKK,UAAU,SAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,KAAf,UACE,gBAAKA,UAAU,mBAGnB,iBAAKA,UAAU,iCAAf,WACE,kBACEjB,KAAK,QACL0B,YAAalB,EAAE,SACfmB,KAAK,QAELC,QAAQ,2CACRC,MAAM,qBACNC,UAAQ,EACRf,MAAOb,EACP6B,SAAUnB,KAEZ,gBAAKK,UAAU,SAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,KAAf,UACE,gBAAKA,UAAU,mBAGnB,iBAAKA,UAAU,iCAAf,WACE,kBACEjB,KAAK,WACL0B,YAAalB,EAAE,YACfmB,KAAK,WACLC,QAAQ,2CACRC,MAAM,8DACNC,UAAQ,EACRf,MAAOX,EACP2B,SAAUnB,KAEZ,gBAAKK,UAAU,SAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,KAAf,UACE,gBAAKA,UAAU,mBAGnB,oBAAQA,UAAU,kCAAkCU,KAAK,SAAzD,WACE,gBAAKV,UAAU,SAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,KAAf,UACE,gBAAKA,UAAU,gBAEjB,gBAAKA,UAAU,OAAf,SAAuBT,EAAE,oBAKlC,ECxID,MARA,WACE,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.tsx","page/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FormAuth = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 10px;\n  width: 70%;\n  margin-left: auto;\n  margin-right: auto;\n  color: white;\n  /* background: white; */\n  background-color: #212121;\n  box-shadow: 0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%);\n  border-radius: 8px;\n  font-family: \"Rampart One\", cursive;\n  position: relative;\n\n  &:before,\n  &:after {\n    z-index: -1;\n    position: absolute;\n    content: \"\";\n    bottom: 25px;\n    left: 10px;\n    width: 50%;\n    top: 80%;\n    max-width: 300px;\n    background: #777;\n    -webkit-box-shadow: 0 35px 20px #777;\n    -moz-box-shadow: 0 35px 20px #777;\n    box-shadow: 0 35px 20px #777;\n    -webkit-transform: rotate(-8deg);\n    -moz-transform: rotate(-8deg);\n    -o-transform: rotate(-8deg);\n    -ms-transform: rotate(-8deg);\n    transform: rotate(-8deg);\n  }\n  &:after {\n    -webkit-transform: rotate(8deg);\n    -moz-transform: rotate(8deg);\n    -o-transform: rotate(8deg);\n    -ms-transform: rotate(8deg);\n    transform: rotate(8deg);\n    right: 10px;\n    left: auto;\n  }\n`;\n","import { FormAuth } from \"./AuthForm.styled\";\nimport type { AppDispatch } from \"../../redux/store\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IDataToPost } from \"../../interface-ts/interface\";\nimport operations from \"../../redux/auth/auth-operations\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction AuthForm() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  // записываем значение инпута по name\n  const handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  // при сабмите отправляем в App данные для создания обьекта контакта\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    const formData: IDataToPost = { name, email, password };\n    const target = e.target as typeof e.target & {\n      name: { value: string };\n      email: { value: string };\n      password: { value: string };\n    };\n    formData.name = target.name.value;\n    formData.email = target.email.value;\n    formData.password = target.password.value;\n    console.log(formData);\n    dispatch(operations.register(formData));\n    navigate(\"/add-contacts\");\n    reset();\n  };\n\n  // очищаем инпуты\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <>\n      <FormAuth className=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n        <div>\n          <h1>{t(\"sign_in\")}</h1>\n        </div>\n        <div className=\"control block-cube block-input\">\n          <input\n            name=\"name\"\n            placeholder={t(\"name\")}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n          <div className=\"bg-top\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg-right\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg\">\n            <div className=\"bg-inner\"></div>\n          </div>\n        </div>\n        <div className=\"control block-cube block-input\">\n          <input\n            name=\"email\"\n            placeholder={t(\"email\")}\n            type=\"email\"\n            // pattern=\"[a-z0-9]+@[a-z]+\\.[a-z]{2,3}\"\n            pattern=\"^[^\\s@]+@([^\\s@.,]+\\.)+[^\\s@.,]{2,}$\"\n            title=\"Input corect Email\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n          <div className=\"bg-top\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg-right\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg\">\n            <div className=\"bg-inner\"></div>\n          </div>\n        </div>\n        <div className=\"control block-cube block-input\">\n          <input\n            name=\"password\"\n            placeholder={t(\"password\")}\n            type=\"password\"\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{7,}$\"\n            title=\"Minimum five characters, at least one letter and one number\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n          <div className=\"bg-top\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg-right\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg\">\n            <div className=\"bg-inner\"></div>\n          </div>\n        </div>\n        <button className=\"btn block-cube block-cube-hover\" type=\"submit\">\n          <div className=\"bg-top\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg-right\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"bg\">\n            <div className=\"bg-inner\"></div>\n          </div>\n          <div className=\"text\">{t(\"sign_in\")}</div>\n        </button>\n      </FormAuth>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import AuthForm from \"../../components/AuthForm\";\n\nfunction RegisterPage() {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["FormAuth","styled","useState","name","setName","email","setEmail","password","setPassword","navigate","useNavigate","t","useTranslation","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","autoComplete","onSubmit","preventDefault","formData","target","console","log","operations","placeholder","type","pattern","title","required","onChange"],"sourceRoot":""}